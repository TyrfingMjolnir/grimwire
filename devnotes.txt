TODO

local: connections being opened asymmetrically, and that causes message reordering to be turned off prematurely (may be fixed)
local: https://grimwire.com/local/#docs/api/bindrequestevents.md request generation section is wrong
local: document relay.isListening
local: document local.* sugars
local: document req.header()/res.header()
local: document local.parseProxyUri and local.makeProxyUri
local: document new headers behaviors
local: document using functions in queryLink

grim: sudden 404s on streams?

grim: in-page refresh needs to re-execute the request from the original context
grim: feed updates lose focus (and all client state)
 - plus non-feed pages cant push updates
 - nquery?
grim: workers need more info about current user
 - and the current config mechanism sucks because it's not there on first tick
grim:

---

TOLATER

escaping idea:
"warning| Page content which was undergoing approval was found to contain live directives without a warning label."
"warning|  - this indicates some piece of software, either maliciously or unintentionally, let the directives through"
"warning|  - the address it came from was foobar.com"
"warning|  - [> Request] [> Response]"
"warning|  - the line in question [> { line: '<script>alert(window.location);</script><p>...' }]"

grim: finish r2r
grim: change grimwidget not to get links before render()
grim: ensure that data is properly separated so that 2 sessions cant issue conflicting updates
grim: check request pipeline so that 1 session cant have its state corrupted by multiple requests

grim: see if X-Origin can be completely replaced with Via

grim: tutorials
 - Constructing URLs (URI templates and path tokens)?
 - User Agents?
 - Request targets?
 - Middleware?

grim: access control service
  - accepts requests describing attempted effects
    - eg [Storage, "Wants to store {>Object} in your browser."]
    - eg [Worker Editor, "Wants to open httpl://bob@grimwire.net/foo.js/foo.js."]
  - description can also include parameters for behavior tracking
    - eg { allow: 3, reset: 24*60*60*1000 } == let an origin do this action 3 times over 24 hours before prompting the user about it
  - user choice creates a security profile for the origin
    - prompts if no previous choice is in effect
    - choice is included in the response to the program
  - detected changes trigger security profile resets
    - "my_worker.js has changed since its last run"
    - "devmode" disables the trigger
  - prompt options
    - I'm developing it: Ignore changes [until I disable devmode | for 5 minutes | for 15 minutes | for 30 minutes | for 1 hr | for 2 hrs | for 3 hrs | for 4 hrs...]
    - Allow.
    - Allow, but ask again.
    - Deny, but ask again.
  - the uri path identifies effect type
    - eg /store-object
    - eg /users-patch
    - the effect types namespace is only populated with paths used by the same origin
    - subsequent requests of the same effect type will update the prompt, then all receive the same decision
"This program asked you to change a fundamental security decision. That seems odd to me, because it's a productivity tool. Did you expect this?"
"Stop, please. After further investigation, we've discovered this was an attack on the system. Attached is the information about this attack for you to review. If you would like to inform us of the attack, you can send this information to us."
""


---

RESEARCH

http://williamcotton.com/another-way-to-publish-code
WinFS http://www.youtube.com/watch?v=UhWCH8ebShY
Zoomable Information Seeking http://www.youtube.com/watch?v=SSVeT5ipvvk
Early ZUI http://www.youtube.com/watch?v=5JzaEUJ7IbE

---

SCRATCHPAD

"Whats New"
 - "Syncing with Alice @ Grimwire.net..."
 - "10 new messages, 18 new photos"
 - "Alice, Some of these are new, some are not."
 - "Bob, Good shots of vacation 2014. (reference: photoset for family)"
 - "Alice, agreed"
"Mail"
"Chat Rooms"
how far could data-uris go in a dynamic interface?

syncmail: contacts
 - viewing a contact
  - local cache of canonical
  - canonical can be a local file
  - fetch canonical
   - gwr.io/cached=<canonical uri>
  - edit canonical? a link which canonical must give
syncmail: mail program
 - inbox = nav:||files|gwr.io/message+gwr.io/shared,shared_users(has)pfraze@grimwire.net
 - outbox = nav:||files|gwr.io/message+gwr.io/shared,message_author=pfraze@grimwire.net
 - drafts = nav:||files|gwr.io/message,rel(hasnt)gwr.io/shared
syncmail: permissioning
 - permissions = who can have what link
 - user flow: create capability link, tell security "is for X Y Z reltypes"
 - on request: security looks up origin as href, sees capability links for given types
syncmail: rewrite and merge into grimwire dashboard
syncmail: relay databases

gwr.io/shared,shared_users(has)pfraze@grimwire.net
gwr.io/shared,shared_groups(has)friends
gwr.io/shared,shared_apps(has)foo.com
gwr.io/shared,shared_networks(has)grimwire.net


gwr.io/shared,shared_networks(not)grimwire.net
gwr.io/shared,shared_networks(has)grimwire.com(hasnt)grimwire.net

nav:||gwr.io=grimwire.net|gwr.io/user=pfraze
nav:|gwr.io/contact,user=pfraze,network=grimwire.net
nav:|gwr.io/contact,group=admins

nav:|gwr.io/contact/rtcuser=pfraze@grimwire.net
nav:|gwr.io/contact/email=pfraze@grimwire.net
nav:|gwr.io/contact/group=admins